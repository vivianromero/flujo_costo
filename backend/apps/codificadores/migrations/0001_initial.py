# Generated by Django 5.2.6 on 2025-09-15 22:31

import django.core.validators
import django.db.models.deletion
import django.db.models.functions.datetime
import django.db.models.manager
import django_choices_field.fields
import mptt.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActividadDepartamento',
            fields=[
                ('id', models.IntegerField(choices=[(1, 'Preparación Materia Prima'), (2, 'Clasificado de Hojas'), (3, 'Despacho'), (4, 'Torcido')], primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'cla_actividaddepartamento',
            },
        ),
        migrations.CreateModel(
            name='CategoriaVitola',
            fields=[
                ('id', models.AutoField(choices=[(7, 'V'), (8, 'VI'), (9, 'VII'), (10, 'VIII'), (5, 'IX')], editable=False, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=50, unique=True)),
                ('orden', models.IntegerField(unique=True)),
            ],
            options={
                'db_table': 'cla_categoriavitola',
                'ordering': ['orden'],
            },
        ),
        migrations.CreateModel(
            name='ClaseMateriaPrima',
            fields=[
                ('id', models.AutoField(choices=[(1, 'Capote'), (2, 'F1'), (3, 'F2'), (4, 'F3'), (7, 'F4'), (5, 'Capa Clasificada'), (6, 'Capa sin Clasificar'), (8, 'Picadura')], editable=False, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=80, unique=True)),
                ('capote_fortaleza', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'cla_clasemateriaprima',
                'ordering': ['descripcion'],
            },
        ),
        migrations.CreateModel(
            name='ConfCentrosElementosOtros',
            fields=[
                ('id', models.AutoField(choices=[(1, 'Centros de Costo'), (2, 'Elementos de Gastos')], editable=False, primary_key=True, serialize=False)),
                ('clave', models.CharField(max_length=80, unique=True, verbose_name='Configurar Centros y Elementos')),
            ],
            options={
                'db_table': 'cla_confcentroselementosotros',
                'ordering': ['clave'],
            },
        ),
        migrations.CreateModel(
            name='CostoVarGlobales',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=125, unique=True, verbose_name='Description')),
                ('activa', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Variable Global del Costo',
                'verbose_name_plural': 'Variables Globales del Costo',
                'db_table': 'cla_costovarglobales',
                'ordering': ['descripcion'],
            },
        ),
        migrations.CreateModel(
            name='FormatoCuentaProducto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=30)),
                ('separador', models.CharField(max_length=1)),
                ('posicion', models.IntegerField()),
                ('longitud', models.IntegerField()),
                ('enuso', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GrupoEscalaCargo',
            fields=[
                ('id', models.SmallIntegerField(editable=False, primary_key=True, serialize=False)),
                ('grupo', models.CharField(max_length=10, unique=True)),
                ('salario', models.DecimalField(db_comment='Salario', decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01, message='The value must be greater than 0')], verbose_name='Salario')),
            ],
            options={
                'db_table': 'cla_grupoescalacargo',
            },
        ),
        migrations.CreateModel(
            name='MarcaSalida',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=5, unique=True, verbose_name='Code')),
                ('descripcion', models.CharField(max_length=128, unique=True, verbose_name='Description')),
                ('activa', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'db_table': 'cla_marcasalida',
                'ordering': ['descripcion'],
            },
        ),
        migrations.CreateModel(
            name='MotivoAjuste',
            fields=[
                ('id', models.AutoField(choices=[(1, 'Merma'), (2, 'Rotura'), (3, 'Promoción'), (4, 'SubProductos')], editable=False, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=128, unique=True, verbose_name='Description')),
                ('aumento', models.BooleanField(db_comment='Ajuste de aumento True en otro caso False', default=False, verbose_name='Increase')),
                ('activo', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'db_table': 'cla_motivoajuste',
                'ordering': ['aumento', 'descripcion'],
            },
        ),
        migrations.CreateModel(
            name='NumeracionDocumentos',
            fields=[
                ('id', models.AutoField(choices=[(1, 'Número Consecutivo'), (2, 'Número de Control')], primary_key=True, serialize=False, verbose_name='Tipo de Número')),
                ('sistema', models.BooleanField(db_comment='Si es controlado por el sistema', default=False, verbose_name='Controlada por el sistema')),
                ('pordepartamento', models.BooleanField(db_comment='Si el número es por departamento', default=False, verbose_name='Por Departmento')),
                ('prefijo', models.BooleanField(db_comment='Si el número de documento va a contener un prefijo', default=False, verbose_name='Usar Prefijo')),
            ],
            options={
                'db_table': 'cla_numeraciondocumentos',
                'ordering': ['id'],
            },
            managers=[
                ('objects_cache', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ProductoDepartamento',
            fields=[
                ('id', models.IntegerField(choices=[(1, 'Materia Prima'), (2, 'Manojos'), (3, 'Capa sin Clasificar'), (4, 'Capa Clasificada'), (5, 'Pesadas'), (6, 'Linea sin Terminar'), (7, 'Linea de Salida'), (8, 'Vitola')], primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'cla_productodepartamento',
            },
        ),
        migrations.CreateModel(
            name='TipoDocumento',
            fields=[
                ('id', models.AutoField(choices=[(1, 'Entrada Desde Versat'), (2, 'Salida Hacia Versat'), (3, 'Transferencia Hacia Departamento'), (4, 'Transferencia Desde Departamento'), (5, 'Ajuste de Aumento'), (6, 'Ajuste de Disminución'), (7, 'Recepción de Producción de Reproceso'), (8, 'Recepción de Producción'), (9, 'Devolución'), (10, 'Sobrante Sujeto a Investigación'), (11, 'Recepción de Rechazo'), (12, 'Carga Inicial'), (13, 'Devolución Recibida'), (14, 'Cambio de Estado'), (15, 'Transferencia Externa'), (16, 'Recibir Transferencia Externa'), (17, 'Venta a Trabajadores'), (18, 'Reporte de SubProductos'), (19, 'Cambio de Producto')], editable=False, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=128, unique=True)),
                ('operacion', django_choices_field.fields.TextChoicesField(choices=[('E', 'Entrada'), ('S', 'Salida')], db_comment='Operación de Entrada (E) o Salida (S)', max_length=1, verbose_name='Operación')),
                ('generado', models.BooleanField(db_comment='Si se genera automáticamente', default=False, verbose_name='Generado')),
                ('prefijo', models.CharField(blank=True, db_comment='Prefijo para el número de control', max_length=5, null=True)),
            ],
            options={
                'db_table': 'cla_tipodocumento',
                'ordering': ['operacion', 'descripcion'],
            },
        ),
        migrations.CreateModel(
            name='TipoProducto',
            fields=[
                ('id', models.AutoField(choices=[(1, 'Pesada'), (2, 'Materia Prima'), (3, 'Habilitación'), (4, 'Línea de Salida'), (5, 'Vitola'), (6, 'Subproducto'), (7, 'Línea sin Terminar')], editable=False, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=80, unique=True)),
                ('orden', models.SmallIntegerField(default=1)),
                ('contabilizacion', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(code='invalid_number', message='Este campo solo puede contener dígitos.', regex='^\\d+$')], verbose_name='Elemento a contabilizar en Transf. Externas')),
            ],
            options={
                'db_table': 'cla_tipoproducto',
                'ordering': ['orden', 'descripcion'],
            },
        ),
        migrations.CreateModel(
            name='CentroCosto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('clave', models.CharField(max_length=50, unique=True, verbose_name='Code')),
                ('descripcion', models.CharField(max_length=255, unique=True, verbose_name='Description')),
                ('activo', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Cost center',
                'verbose_name_plural': 'Centers of cost',
                'db_table': 'cla_centrocosto',
                'ordering': ['descripcion', 'clave'],
                'indexes': [models.Index(fields=['clave', 'descripcion'], name='cla_centroc_clave_f9da43_idx')],
            },
        ),
        migrations.CreateModel(
            name='ConfCentrosElementosOtrosDetalle',
            fields=[
                ('id', models.IntegerField(editable=False, primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=250)),
                ('valor', models.CharField(blank=True, max_length=100, null=True)),
                ('clave', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='confccelem_clave', to='codificadores.confcentroselementosotros', verbose_name='Configurar')),
            ],
            options={
                'db_table': 'cla_confcentroselementosotrosdetalle',
                'ordering': ['clave__clave', 'descripcion'],
            },
        ),
        migrations.CreateModel(
            name='ConfCentrosElementosOtrosDetalleGrouped',
            fields=[
            ],
            options={
                'ordering': ['clave__clave', 'descripcion'],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('codificadores.confcentroselementosotrosdetalle',),
        ),
        migrations.CreateModel(
            name='ConfiguracionesGen',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('clave', models.CharField(max_length=100, unique=True, verbose_name='Clave')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Configuración General',
                'verbose_name_plural': 'Configuraciones Generales',
                'db_table': 'cla_configuracionesgen',
                'indexes': [models.Index(fields=['clave'], name='cla_configu_clave_5f1962_idx')],
            },
        ),
        migrations.CreateModel(
            name='Cuenta',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('long_niv', models.IntegerField()),
                ('posicion', models.IntegerField()),
                ('clave', models.CharField(max_length=100, unique=True)),
                ('clavenivel', models.CharField(max_length=100)),
                ('descripcion', models.CharField(max_length=1000, verbose_name='Description')),
                ('activa', models.BooleanField(default=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='codificadores.cuenta')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
                'db_table': 'cla_cuenta',
                'ordering': ['clave', 'posicion'],
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=125, unique=True, verbose_name='Code')),
                ('descripcion', models.CharField(max_length=125, unique=True, verbose_name='Description')),
                ('centrocosto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='departamento_centrocosto', to='codificadores.centrocosto', verbose_name='Cost Center')),
                ('departamentoactividad', models.ManyToManyField(blank=True, related_name='departamento_actividad', to='codificadores.actividaddepartamento', verbose_name='Actividad')),
                ('relaciondepartamento', models.ManyToManyField(blank=True, to='codificadores.departamento', verbose_name='Destination Department')),
                ('departamentoproductoentrada', models.ManyToManyField(blank=True, related_name='departamentoproductoentrada_producto', to='codificadores.productodepartamento', verbose_name='Productos de Entrada')),
                ('departamentoproductosalida', models.ManyToManyField(blank=True, related_name='departamentoproductosalida_producto', to='codificadores.productodepartamento', verbose_name='Producto a Producir')),
                ('departamentodocumentosentrada', models.ManyToManyField(blank=True, related_name='departamento_documentosentrada', to='codificadores.tipodocumento', verbose_name='Documentos de Entrada')),
                ('departamentodocumentossalida', models.ManyToManyField(blank=True, related_name='departamento_documentossalida', to='codificadores.tipodocumento', verbose_name='Documentos de Salida')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'db_table': 'cla_departamento',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='FichaCostoFilas',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fila', models.CharField(max_length=8, unique=True)),
                ('descripcion', models.CharField(max_length=150)),
                ('encabezado', models.BooleanField(db_comment='Valor True si tiene descendientes y su valor es la suma de los hijos los valores de sus hijos. Ejemplo Fila 1 es encabezado si exiten filas 1.1, 1.2, 1.n y el valor de Fila 1 es la suma de sus hijos', default=False)),
                ('salario', models.BooleanField(db_comment='Si el concepto constituye salario', default=False)),
                ('vacaciones', models.BooleanField(db_comment='Si es vacaciones y se relaciona con el concepto salario para calcularlo como el 9.09 del salario', default=False)),
                ('desglosado', models.BooleanField(db_comment='Si el concepto es resultado de los desgloses establecidos: Salario, Materia Prima y Materiales, Gastos Materia Prima Tabaco', default=False)),
                ('calculado', models.BooleanField(db_comment='Si su valor depende de la suma de otras filas del encabezado', default=False)),
                ('padre', models.CharField(blank=True, max_length=10, null=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('filasasumar', models.ManyToManyField(blank=True, to='codificadores.fichacostofilas', verbose_name='Filas a sumar')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='codificadores.fichacostofilas')),
            ],
            options={
                'db_table': 'cla_fichacostofilas',
                'ordering': ['fila'],
            },
        ),
        migrations.CreateModel(
            name='Medida',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('clave', models.CharField(max_length=6, unique=True, verbose_name='U.M')),
                ('descripcion', models.CharField(max_length=50, unique=True, verbose_name='Description')),
                ('activa', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Unit of measurement',
                'verbose_name_plural': 'Measurement units',
                'db_table': 'cla_medida',
                'ordering': ['clave', 'descripcion'],
                'indexes': [models.Index(fields=['clave', 'descripcion'], name='cla_medida_clave_ee8e43_idx')],
            },
        ),
        migrations.CreateModel(
            name='MedidaConversion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('factor_conversion', models.DecimalField(db_comment='Factor de conversión', decimal_places=6, max_digits=10, validators=[django.core.validators.MinValueValidator(1e-06, message='The value must be greater than 0')], verbose_name='Convertion Factor')),
                ('medidad', models.ForeignKey(db_comment='Medida destino de la conversión', on_delete=django.db.models.deletion.CASCADE, related_name='medidaconversion_destino', to='codificadores.medida', verbose_name='Destination Measure')),
                ('medidao', models.ForeignKey(db_comment='Medida origen de la conversión', on_delete=django.db.models.deletion.CASCADE, related_name='medidaconversion_origen', to='codificadores.medida', verbose_name='Origin Measure')),
            ],
            options={
                'verbose_name': 'Convert unit of measurement',
                'verbose_name_plural': 'Convert measurement units',
                'db_table': 'cla_medidaconversion',
                'ordering': ['medidao__descripcion'],
            },
        ),
        migrations.CreateModel(
            name='NormaConsumo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cantidad', models.DecimalField(decimal_places=6, default=0.0, max_digits=18, verbose_name='Quantity')),
                ('activa', models.BooleanField(default=False, verbose_name='Active')),
                ('confirmada', models.BooleanField(default=False, verbose_name='Confirmada')),
                ('fecha_creacion', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), verbose_name='Crate at')),
                ('fecha', models.DateField(verbose_name='Date')),
                ('tiponorma', django_choices_field.fields.IntegerChoicesField(choices=[(1, 'Pesada'), (2, 'Materia Prima'), (4, 'Línea de Salida'), (5, 'Vitola'), (7, 'Habilitados')], verbose_name='Tipo Norma')),
                ('medida', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='normaconsumo_medida', to='codificadores.medida', verbose_name='U.M')),
            ],
            options={
                'verbose_name': 'Norma de Consumo',
                'verbose_name_plural': 'Normas de Consumo',
                'db_table': 'cla_normaconsumo',
                'ordering': ['producto__tipoproducto', 'producto__descripcion', 'confirmada', '-activa'],
            },
        ),
        migrations.CreateModel(
            name='NormaConsumoGrouped',
            fields=[
            ],
            options={
                'verbose_name': 'Norma de Consumo',
                'verbose_name_plural': 'Normas de Consumo',
                'ordering': ['producto__tipoproducto', 'producto__descripcion', 'fecha'],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('codificadores.normaconsumo',),
        ),
        migrations.CreateModel(
            name='ProductoFlujo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=50, unique=True, verbose_name='Code')),
                ('descripcion', models.CharField(max_length=400, verbose_name='Description')),
                ('activo', models.BooleanField(default=True, verbose_name='Active')),
                ('precio_lop', models.DecimalField(db_comment='Precio según Listado Oficial de Precio', decimal_places=4, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0, message='El valor debe ser >= 0')], verbose_name='Precio LOP')),
                ('rendimientocapa', models.IntegerField(db_comment='Rendimiento de la capa x millar', default=0, validators=[django.core.validators.MinValueValidator(0, message='El valor debe ser >= 0')], verbose_name='Rendimiento x Millar')),
                ('medida', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productoflujo_medida', to='codificadores.medida', verbose_name='U.M')),
                ('vitolas', models.ManyToManyField(related_name='capas_categvitolas', to='codificadores.categoriavitola', verbose_name='Vitolas')),
                ('tipoproducto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productoflujo_tipo', to='codificadores.tipoproducto', verbose_name='Product Type')),
            ],
            options={
                'db_table': 'cla_productoflujo',
                'ordering': ['tipoproducto', 'descripcion'],
            },
        ),
        migrations.CreateModel(
            name='NormaconsumoDetalle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('norma_ramal', models.DecimalField(decimal_places=6, default=0.0, max_digits=18, verbose_name='Ramal Norm')),
                ('norma_empresarial', models.DecimalField(decimal_places=6, default=0.0, max_digits=18, verbose_name='Enterprise Norm')),
                ('operativo', models.BooleanField(db_comment='Si el producto es operativo o no', default=False, verbose_name='Operational')),
                ('medida', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='normaconsumodetalle_medida', to='codificadores.medida', verbose_name='U.M')),
                ('normaconsumo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='normaconsumodetalle_normaconsumo', to='codificadores.normaconsumo')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='normaconsumodetalle_producto', to='codificadores.productoflujo', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Detalles Norma de Consumo',
                'verbose_name_plural': 'Detalles Norma de Consumo',
                'db_table': 'cla_normaconsumodetalle',
            },
        ),
        migrations.AddField(
            model_name='normaconsumo',
            name='producto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='normaconsumo_producto', to='codificadores.productoflujo', verbose_name='Product'),
        ),
        migrations.CreateModel(
            name='LineaSalida',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('envase', models.IntegerField(default=0, verbose_name='Package')),
                ('norma_embalaje', models.IntegerField(default=0, verbose_name='Packaging Standard')),
                ('vol_cajam3', models.DecimalField(decimal_places=6, default=0.0, max_digits=10, verbose_name='Box Volume M3')),
                ('peso_bruto', models.DecimalField(decimal_places=6, default=0.0, max_digits=10, verbose_name='Gross Weight')),
                ('peso_neto', models.DecimalField(decimal_places=6, default=0.0, max_digits=10, verbose_name='Net Weight')),
                ('peso_legal', models.DecimalField(decimal_places=6, default=0.0, max_digits=10, verbose_name='Legal Weight')),
                ('marcasalida', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lineasalida_marcasalida', to='codificadores.marcasalida', verbose_name='Starting Mark')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lineasalida_producto', to='codificadores.productoflujo')),
                ('vitola', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lineasalida_vitola', to='codificadores.productoflujo', verbose_name='Vitola')),
            ],
            options={
                'db_table': 'cla_lineasalida',
                'ordering': ['producto__descripcion'],
            },
        ),
        migrations.CreateModel(
            name='CambioProducto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('productod', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productoflujo_destino', to='codificadores.productoflujo', verbose_name='Destination Product')),
                ('productoo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productoflujo_origen', to='codificadores.productoflujo', verbose_name='Origin Product')),
            ],
            options={
                'verbose_name': 'Cambio de Producto',
                'verbose_name_plural': 'Cambio de Productos',
                'db_table': 'cla_cambioproducto',
                'ordering': ['productoo__descripcion'],
            },
        ),
        migrations.CreateModel(
            name='ProductsCapasClaPesadas',
            fields=[
            ],
            options={
                'ordering': ['tipoproducto', 'descripcion'],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('codificadores.productoflujo',),
        ),
        migrations.CreateModel(
            name='ProductoFlujoClase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('clasemateriaprima', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productosflujoclase_clasemateriaprima', to='codificadores.clasemateriaprima')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productoflujoclase_producto', to='codificadores.productoflujo')),
            ],
            options={
                'db_table': 'cla_productoflujoclase',
            },
        ),
        migrations.CreateModel(
            name='ProductoFlujoCuenta',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cuenta', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productoflujocuenta_cuenta', to='codificadores.cuenta')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productoflujocuenta_producto', to='codificadores.productoflujo')),
            ],
            options={
                'db_table': 'cla_productoflujocuenta',
            },
        ),
        migrations.CreateModel(
            name='ProductoFlujoDestino',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('destino', django_choices_field.fields.TextChoicesField(choices=[('C', 'Consumo Nacional'), ('E', 'Exportación')], max_length=1, verbose_name='Destination')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productoflujodestino_producto', to='codificadores.productoflujo')),
            ],
            options={
                'db_table': 'cla_productoflujodestino',
            },
        ),
        migrations.CreateModel(
            name='TipoDocumentoCuenta',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cuenta_debe_cn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tipodocumentocuenta_cuenta_debe_cn', to='codificadores.cuenta', verbose_name='Debit Count CN')),
                ('cuenta_debe_exp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tipodocumentocuenta_cuenta_debe_exp', to='codificadores.cuenta', verbose_name='Debit Count Exp')),
                ('cuenta_haber_cn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tipodocumentocuenta_cuenta_haber_cn', to='codificadores.cuenta', verbose_name='Credit Count CN')),
                ('cuenta_haber_exp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tipodocumentocuenta_cuenta_haber_exp', to='codificadores.cuenta', verbose_name='Credit Count Exp')),
                ('documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='codificadores.tipodocumento', verbose_name='Document Type')),
            ],
            options={
                'db_table': 'cla_tipodocumentocuenta',
            },
        ),
        migrations.CreateModel(
            name='UnidadContable',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('nombre', models.CharField(max_length=30, unique=True, verbose_name='Name')),
                ('activo', models.BooleanField(default=True, verbose_name='Active')),
                ('is_empresa', models.BooleanField(default=False, verbose_name='Is Company')),
                ('is_comercializadora', models.BooleanField(default=False, verbose_name='Is Commercial')),
            ],
            options={
                'verbose_name': 'UEB',
                'verbose_name_plural': 'UEBs',
                'db_table': 'cla_unidadcontable',
                'ordering': ['codigo'],
                'indexes': [models.Index(fields=['codigo'], name='cla_unidadc_codigo_ea13a8_idx')],
            },
        ),
        migrations.CreateModel(
            name='FechaInicio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('fecha', models.DateField(verbose_name='Date')),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fechainicio_departamento', to='codificadores.departamento', verbose_name='Department')),
                ('ueb', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fechainicio_ueb', to='codificadores.unidadcontable', verbose_name='UEB')),
            ],
            options={
                'db_table': 'fp_fechainicio',
            },
        ),
        migrations.AddField(
            model_name='departamento',
            name='unidadcontable',
            field=models.ManyToManyField(related_name='departamento_unidadcontable', to='codificadores.unidadcontable', verbose_name='UEB'),
        ),
        migrations.CreateModel(
            name='ClasificadorCargos',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=5, unique=True)),
                ('descripcion', models.CharField(max_length=160, unique=True)),
                ('actividad', django_choices_field.fields.TextChoicesField(choices=[('C', 'Consumo Nacional'), ('E', 'Exportación')], max_length=1, verbose_name='Actividad')),
                ('vinculo_produccion', django_choices_field.fields.IntegerChoicesField(choices=[(1, 'Directo'), (2, 'Indirecto Producción'), (3, 'Indirecto')], db_comment='Directo (1), Indirecto Producción (2), Indirecto (3)', default=1, verbose_name='Vinculo Producción')),
                ('nr_media', models.IntegerField(db_comment='Norma de Rendimiento Media para los trabajadores directos', default=0, verbose_name='Norma Rendimiento Media')),
                ('norma_tiempo', models.DecimalField(decimal_places=4, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0, message='El valor debe ser >= 0')], verbose_name='Norma de tiempo (hrs)')),
                ('activo', models.BooleanField(default=True, verbose_name='Active')),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cargo_grupo', to='codificadores.grupoescalacargo', verbose_name='Grupo Escala')),
                ('unidadcontable', models.ManyToManyField(related_name='cargo_unidadcontable', to='codificadores.unidadcontable', verbose_name='UEB')),
            ],
            options={
                'db_table': 'cla_clasificadorcargos',
            },
        ),
        migrations.CreateModel(
            name='Vitola',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('diametro', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Diameter')),
                ('longitud', models.IntegerField(default=0, verbose_name='Length')),
                ('destino', django_choices_field.fields.TextChoicesField(choices=[('C', 'Consumo Nacional'), ('E', 'Exportación')], max_length=1, verbose_name='Destination')),
                ('cepo', models.IntegerField(default=0)),
                ('tipovitola', django_choices_field.fields.IntegerChoicesField(choices=[(1, 'Picadura'), (2, 'Hoja')], verbose_name='Type')),
                ('capa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vitola_productocapa', to='codificadores.productoflujo')),
                ('categoriavitola', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vitola_categotia', to='codificadores.categoriavitola', verbose_name='Categoría')),
                ('pesada', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vitola_productopesada', to='codificadores.productoflujo')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vitola_producto', to='codificadores.productoflujo')),
            ],
            options={
                'db_table': 'cla_vitola',
                'ordering': ['destino', 'categoriavitola', 'producto__descripcion'],
            },
        ),
        migrations.AddIndex(
            model_name='confcentroselementosotrosdetalle',
            index=models.Index(fields=['clave', 'descripcion'], name='cla_confcen_clave_i_8d78b0_idx'),
        ),
        migrations.AddConstraint(
            model_name='confcentroselementosotrosdetalle',
            constraint=models.UniqueConstraint(fields=('clave', 'valor'), name='unique_confcentroselementosotrosdetalle_clave_valor'),
        ),
        migrations.AddIndex(
            model_name='cuenta',
            index=models.Index(fields=['clave'], name='cla_cuenta_clave_f63dff_idx'),
        ),
        migrations.AddIndex(
            model_name='cuenta',
            index=models.Index(fields=['tree_id', 'lft'], name='codificadores_cuenta_tree_2df9'),
        ),
        migrations.AddIndex(
            model_name='fichacostofilas',
            index=models.Index(fields=['fila', 'descripcion'], name='cla_fichaco_fila_0edcf3_idx'),
        ),
        migrations.AddIndex(
            model_name='fichacostofilas',
            index=models.Index(fields=['tree_id', 'lft'], name='codificadores_fichacostoficce4'),
        ),
        migrations.AddIndex(
            model_name='medidaconversion',
            index=models.Index(fields=['medidao', 'medidad'], name='cla_medidac_medidao_706d4a_idx'),
        ),
        migrations.AddConstraint(
            model_name='medidaconversion',
            constraint=models.UniqueConstraint(fields=('medidao', 'medidad'), name='unique_medidaconversion_medidao_medidad'),
        ),
        migrations.AddConstraint(
            model_name='normaconsumodetalle',
            constraint=models.UniqueConstraint(fields=('normaconsumo', 'producto'), name='unique_normaconsumodetalle_normaconsumo_producto'),
        ),
        migrations.AddIndex(
            model_name='cambioproducto',
            index=models.Index(fields=['productoo', 'productod'], name='cla_cambiop_product_fcf89d_idx'),
        ),
        migrations.AddConstraint(
            model_name='cambioproducto',
            constraint=models.UniqueConstraint(fields=('productoo', 'productod'), name='unique_cambioproducto_productoo_productod'),
        ),
        migrations.AddIndex(
            model_name='fechainicio',
            index=models.Index(fields=['departamento', 'ueb'], name='fp_fechaini_departa_a72a07_idx'),
        ),
        migrations.AddConstraint(
            model_name='fechainicio',
            constraint=models.UniqueConstraint(fields=('departamento', 'ueb'), name='unique_fechainicio_departamento_ueb'),
        ),
        migrations.AddIndex(
            model_name='departamento',
            index=models.Index(fields=['codigo', 'descripcion', 'centrocosto'], name='cla_departa_codigo_9c90b9_idx'),
        ),
        migrations.AddIndex(
            model_name='clasificadorcargos',
            index=models.Index(fields=['codigo', 'descripcion', 'grupo', 'actividad', 'vinculo_produccion'], name='cla_clasifi_codigo_d6a4e1_idx'),
        ),
    ]
